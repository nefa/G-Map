{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///external commonjs \"@nestjs/typeorm\"","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.controller.ts","webpack:///./src/app/users/users.service.ts","webpack:///external commonjs \"typeorm\"","webpack:///./src/app/users/user.entity.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get('DB_HOST'),\n        port: +configService.get<number>('DB_PORT'),\n        username: configService.get('DB_USERNAME'),\n        password: configService.get('DB_PASSWORD'),\n        database: configService.get('DB_NAME'),\n        entities: [],\n        synchronize: true,\n        ssl: true,\n        extra: {\n          ssl: {\n            rejectUnauthorized: false,\n          },\n        },\n        \n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return ({ message: 'Hello API' });\n  }\n}\n","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/typeorm\");","import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { User } from './user.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n","import { Controller, Get, Post, Body, Put, Param, Delete, NotFoundException } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { User } from './user.entity';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  //get all users\n  @Get()\n  async findAll(): Promise<User[]> {\n    return this.usersService.findAll();\n  }\n\n  //get user by id\n  @Get(':id')\n  async findOne(@Param('id') id: number): Promise<User> {\n    const user = await this.usersService.findOne(id);\n    if (!user) {\n      throw new NotFoundException('User does not exist!');\n    } else {\n      return user;\n    }\n  }\n\n  //create user\n  @Post()\n  async create(@Body() user: User): Promise<User> {\n    return this.usersService.create(user);\n  }\n\n  //update user\n  @Put(':id')\n  async update (@Param('id') id: number, @Body() user: User): Promise<any> {\n    return this.usersService.update(id, user);\n  }\n\n  //delete user\n  @Delete(':id')\n  async delete(@Param('id') id: number): Promise<any> {\n    //handle error if user does not exist\n    const user = await this.usersService.findOne(id);\n    if (!user) {\n      throw new NotFoundException('User does not exist!');\n    }\n    return this.usersService.delete(id);\n  }\n}","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport {User} from './user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository<User>,\n  ) {}\n\n  async findAll(): Promise<User[]> {\n    return this.userRepository.find();\n  }\n\n  async findOne(id: number): Promise<User> {\n    return this.userRepository.findOne({ where: { id } });\n  }\n\n  async create(user: Partial<User>): Promise<User> {\n    const newuser = this.userRepository.create(user);\n    return this.userRepository.save(newuser);\n  }\n\n  async update(id: number, user: Partial<User>): Promise<User> {\n    await this.userRepository.update(id, user);\n    return this.userRepository.findOne({ where: { id } });\n  }\n\n  async delete(id: number): Promise<void> {\n    await this.userRepository.delete(id);\n  }\n}","module.exports = require(\"typeorm\");","import { Entity, PrimaryGeneratedColumn, Column,  } from \"typeorm\";\n\n@Entity()\nexport class User {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    name: string;\n\n    @Column()\n    email: string;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${globalPrefix}`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}